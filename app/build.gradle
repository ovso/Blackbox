apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

apply plugin: 'kotlin-kapt'
apply from: '../scripts/ktlint.gradle'

def keystorePropertiesFile = rootProject.file("../../workspace_side/jks/blackbox_keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    bundle {
        density.enableSplit = true
        abi.enableSplit = true
        language.enableSplit = true
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }
    compileSdkVersion config.compileSdkVersion
    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdkVersion
        targetSdkVersion config.targetSdkVersion
        versionCode config.versionCode

        int versionMajor = 0
        int versionMinor = 0
        int versionPatch = config.versionCode

        if (1000 > versionPatch && versionPatch > 99) {
            versionMajor = versionPatch / 100
            versionMinor = (versionPatch % 100) / 10
            versionPatch = (versionPatch % 100) % 10
        } else if (100 > versionCode && versionPatch > 9) {
            versionMajor = 0
            versionMinor = versionPatch / 10
            versionPatch = versionPatch % 10
        } else if (versionPatch < 10) {
            versionMajor = 0
            versionMinor = 0
            versionPatch = versionPatch / 1
        }

        versionName "${versionMajor}.${versionMinor}.${versionPatch}"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //multiDexEnabled true
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            shrinkResources false

            proguardFile 'proguard-butterknipe.pro'
            proguardFile 'proguard-glide.pro'
            proguardFile 'proguard-retrofit2.pro'
            proguardFile 'proguard-dagger.pro'
            proguardFile 'proguard-okhttp3.pro'
            proguardFile 'proguard-gson.pro'
            proguardFile 'proguard-firebase.pro'
            proguardFile 'proguard-android-support.pro'
            proguardFile 'proguard-others.pro'

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def formattedDate = new Date().format('yyyyMMddHHmmss')
                    def appName = variant.getApplicationId().split(/[.]/)[3]
                    outputFileName =
                            "${appName}-${variant.name}-${variant.versionCode}-${variant.versionName}-${formattedDate}.apk"
                }
            }
        }
        debug {
        }
    }

    repositories {
        maven {
            url 'https://maven.google.com'
            // Alternative URL is 'https://dl.google.com/dl/android/maven2/'
        }
        maven { url 'https://maven.fabric.io/public' }
    }

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation fileTree(dir: 'libs', include: ['*.aar'])
    implementation files('libs/YouTubeAndroidPlayerApi.jar')

    implementation deps.androidx.values()
    implementation deps.firebase.values()

    api deps.dagger.values()
    kapt deps.dagger_compiler.values()

    implementation deps.glide.runtime
    implementation deps.rx.values()
    implementation deps.timber
    implementation deps.retrofit.values()
    implementation deps.okhttp.values()
    implementation deps.kotlin.values()

    testImplementation deps.tsl.values()
    androidTestImplementation deps.atsl.values()
}